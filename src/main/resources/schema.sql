create TABLE IF NOT EXISTS mpa
(
    mpa_id      INTEGER PRIMARY KEY,
    name        VARCHAR,
    description VARCHAR
);

create TABLE IF NOT EXISTS films
(
    film_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR,
    description  TEXT,
    release_date DATE,
    duration     INTEGER,
    mpa_id       INTEGER REFERENCES mpa (mpa_id)  ON delete CASCADE
);

create TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR,
    login    VARCHAR,
    name     VARCHAR,
    birthday DATE
);

create TABLE IF NOT EXISTS genres
(
    genre_id INTEGER PRIMARY KEY,
    name     VARCHAR
);

create TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT REFERENCES films (film_id) ON delete CASCADE ,
    genre_id INTEGER REFERENCES genres (genre_id) ON delete CASCADE,
    CONSTRAINT PK_FILM_GENRES PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS film_likes
(
    film_id BIGINT REFERENCES films (film_id) ON delete CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON delete CASCADE,
    CONSTRAINT PK_FILM_LIKES PRIMARY KEY (film_id, user_id)
);

create TABLE IF NOT EXISTS friends
(
    user_id   BIGINT REFERENCES users (user_id) ON delete CASCADE,
    friend_id BIGINT REFERENCES users (user_id) ON delete CASCADE,
    status    BOOLEAN,
    CONSTRAINT PK_FRIENDS PRIMARY KEY (user_id, friend_id)
);